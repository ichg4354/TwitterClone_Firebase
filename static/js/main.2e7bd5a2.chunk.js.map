{"version":3,"sources":["fBase.js","components/Navigation.js","components/AuthForm.js","routes/Auth.js","components/Tweets.js","components/TweetForm.js","components/TweetBox.js","routes/Home.js","components/UpdateProfileForm.js","routes/Profile.js","Router.js","components/App.js","index.js"],"names":["dotenv","config","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","auth","dataService","firestore","storageService","storage","NavContainer","styled","div","NavUl","ul","NavLi","li","IconBox","IconText","span","Navigation","userData","currentLocation","useLocation","pathname","to","style","textDecoration","width","height","color","AuthFormContainer","Input","input","AuthSubmitBtn","QuestionSpan","a","ErrorSpan","AuthForm","useState","undefined","email","setEmail","password","setPassword","newUser","setNewUser","error","setError","onSubmit","e","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","onChange","event","target","value","name","placeholder","type","required","onClick","AuthContainer","IconContainer","SocialLoginContainer","SocialLoginBtn","button","Auth","onSocialClick","provider","GithubAuthProvider","GoogleAuthProvider","signInWithPopup","result","console","log","TweetsContainer","TweetContainer","TweetText","h3","FunctionBtnContainer","TweetImage","img","Tweets","tweetObj","isTweeter","imagePath","updateBtnClicked","setUpdateBtnClicked","text","newTweet","setNewTweet","imageLink","setImageLink","IMAGE_REF","ref","child","getImage","getDownloadURL","link","onDeleteBtnClick","window","confirm","collection","doc","id","delete","onEditInitBtnClick","set","merge","useEffect","src","TweetFormContainer","TweetTextinput","TweetTextContainer","Tweetform","form","TweetSubmitBtn","TweetFileLabel","label","TweetFileinput","ClearBtnContainer","ClearBtn","TweetForm","imageFile","setImageFile","tweet","setTweet","imageInput","document","getElementById","uid","lastModified","put","add","createdAt","Date","now","userId","URL","createObjectURL","justifyContent","display","htmlFor","textAlign","accept","files","float","TweetBox","tweets","setTweets","getData","orderBy","onSnapshot","snap","dataList","docs","map","each","data","HomeContainer","Home","UpdateProfileFrom","setUserData","setUpdateProfileState","displayName","newUserName","setNewUserName","updateProfile","prev","ProfileContainer","ProfileFunctions","LogoutBtn","ProfileEditBtn","Profile","updateProfileState","userTweets","setUserTweets","history","useHistory","onLogOutClick","signOut","push","getUserTweets","where","AppRoute","loggedIn","path","exact","Footer","footer","MainContainer","App","setLoggedIn","init","setInit","onAuthStateChanged","user","getFullYear","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2e7bd5a2.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport dotenv from \"dotenv\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\ndotenv.config();\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport const authService = firebase.auth();\n\nexport const dataService = firebase.firestore();\n\nexport const storageService = firebase.storage();\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {\n  RiProfileLine,\n  RiTwitterLine,\n  RiProfileFill,\n  RiTwitterFill,\n} from \"react-icons/ri\";\nimport { useLocation } from \"react-router-dom\";\n\nconst NavContainer = styled.div`\n  height: 50px;\n  color: white;\n  display: flex;\n  position: fixed;\n  bottom: 0;\n  text-align: center;\n  width: 100vw;\n  z-index: 1;\n  background-color: black;\n  justify-content: space-evenly;\n  align-items: center;\n`;\nconst NavUl = styled.ul`\n  text-decoration: none;\n  float: left;\n  list-style-type: none;\n  color: white;\n  padding: 0;\n  margin: 0;\n`;\nconst NavLi = styled.li`\n  text-decoration: none;\n  float: left;\n  padding: 0;\n`;\nconst IconBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100px;\n  text-align: center;\n`;\nconst IconText = styled.span`\n  color: #1da1f2;\n  font-size: 6;\n  font-weight: 300;\n  text-decoration: none;\n`;\n\nconst Navigation = ({ userData }) => {\n  const locationObj = useLocation();\n  const currentLocation = locationObj.pathname;\n  return (\n    <NavContainer>\n      <NavUl>\n        <NavLi>\n          <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n            <IconBox>\n              {currentLocation === \"/\" ? (\n                <RiTwitterFill\n                  style={{ width: \"30px\", height: \"30px\", color: \"#1DA1F2\" }}\n                />\n              ) : (\n                <RiTwitterLine\n                  style={{ width: \"30px\", height: \"30px\", color: \"#1DA1F2\" }}\n                />\n              )}\n              <IconText>HOME</IconText>\n            </IconBox>\n          </Link>\n        </NavLi>\n        <NavLi>\n          <Link to=\"/Profile\" style={{ textDecoration: \"none\" }}>\n            <IconBox>\n              {currentLocation === \"/\" ? (\n                <RiProfileLine\n                  style={{ width: \"30px\", height: \"30px\", color: \"#1DA1F2\" }}\n                />\n              ) : (\n                <RiProfileFill\n                  style={{ width: \"30px\", height: \"30px\", color: \"#1DA1F2\" }}\n                />\n              )}\n              <IconText>Profile</IconText>\n            </IconBox>\n          </Link>\n        </NavLi>\n      </NavUl>\n    </NavContainer>\n  );\n};\n\nexport default Navigation;\n","import { authService } from \"fBase\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst AuthFormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  padding: 10;\n  font-weight: 700;\n  border-radius: 30px;\n  padding: 10px 20px;\n  margin-bottom: 10px;\n  border: none;\n  width: 200px;\n`;\n\nconst AuthSubmitBtn = styled.input`\n  padding: 10;\n  font-weight: 700;\n  border-radius: 30px;\n  padding: 10px 20px;\n  margin-bottom: 5px;\n  margin-top: 2px;\n  border: none;\n  width: 240px;\n  background-color: #1da1f2;\n`;\n\nconst QuestionSpan = styled.a`\n  color: #1da1f2;\n  font-size: 15px;\n  text-decoration: underline;\n  font-weight: 300;\n  margin-bottom: 30px;\n  font-weight: bold;\n`;\n\nconst ErrorSpan = styled.span`\n  color: white;\n  font-weight: 300;\n`;\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(undefined);\n  const [password, setPassword] = useState(undefined);\n  const [newUser, setNewUser] = useState(false);\n  const [error, setError] = useState();\n\n  const clearInput = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    let UserData;\n    try {\n      if (newUser === false) {\n        UserData = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n        setNewUser(true);\n      } else {\n        UserData = await authService.signInWithEmailAndPassword(\n          email,\n          password\n        );\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n    clearInput();\n  };\n  const onChange = (event) => {\n    const {\n      target: { value, name },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <AuthFormContainer>\n        <Input\n          name=\"email\"\n          placeholder=\"Email\"\n          onChange={onChange}\n          type=\"text\"\n          value={email}\n          required\n        ></Input>\n        <Input\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={onChange}\n          type=\"password\"\n          value={password}\n          required\n        ></Input>\n        <AuthSubmitBtn\n          type=\"submit\"\n          value={newUser ? \"Log in\" : \"Join\"}\n        ></AuthSubmitBtn>\n        <QuestionSpan\n          onClick={() => {\n            newUser ? setNewUser(false) : setNewUser(true);\n          }}\n        >\n          {newUser ? \"Create Account\" : \"Sign In\"}\n        </QuestionSpan>\n        <ErrorSpan>{error}</ErrorSpan>\n      </AuthFormContainer>\n    </form>\n  );\n};\n\nexport default AuthForm;\n","import { authService } from \"fBase\";\nimport React from \"react\";\nimport firebase from \"firebase/app\";\nimport AuthForm from \"components/AuthForm\";\nimport styled from \"styled-components\";\nimport { ImTwitter, ImGithub, ImGoogle3 } from \"react-icons/im\";\n\nconst AuthContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  flex-direction: column;\n  background-color: black;\n`;\n\nconst IconContainer = styled.div`\n  margin-bottom: 30px;\n`;\n\nconst SocialLoginContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 240px;\n  justify-content: space-around;\n`;\n\nconst SocialLoginBtn = styled.button`\n  border-radius: 15px;\n  border: none;\n  margin-left: 10px;\n  padding: 3px 15px;\n  font-size: 15px;\n  font-weight: 300;\n  margin-bottom: 10px;\n  color: grey;\n`;\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    try {\n      let provider;\n      if (name === \"github\") {\n        provider = new firebase.auth.GithubAuthProvider();\n      } else if (name === \"google\") {\n        provider = new firebase.auth.GoogleAuthProvider();\n      }\n      const result = await authService.signInWithPopup(provider);\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <AuthContainer>\n      <IconContainer>\n        <ImTwitter style={{ color: \"#1DA1F2\", width: 60, height: 60 }} />\n      </IconContainer>\n      <AuthForm />\n      <SocialLoginContainer>\n        <SocialLoginBtn onClick={onSocialClick} name=\"google\">\n          <ImGoogle3 style={{ width: 15, height: 15 }} />\n          <br />\n          Continue with Google\n        </SocialLoginBtn>\n        <SocialLoginBtn onClick={onSocialClick} name=\"github\">\n          <ImGithub style={{ width: 15, height: 15 }} />\n          <br />\n          Continue with Github\n        </SocialLoginBtn>\n      </SocialLoginContainer>\n    </AuthContainer>\n  );\n};\n\nexport default Auth;\n","import { dataService, storageService } from \"fBase\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst TweetsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst TweetContainer = styled.div`\n  display: flex;\n  background-color: white;\n  width: 100%;\n  margin-bottom: 35px;\n  border-radius: 15px;\n  max-width: 400px;\n  padding: 10px 15px;\n  flex-direction: column;\n  position: relative;\n  min-height: 40px;\n`;\n\n// const Tweet\n\nconst TweetText = styled.h3`\n  font-size: 20px;\n  font-weight: 400;\n  margin-top: 0;\n  width: 50%;\n  display: flex;\n  align-items: center;\n  height: 100%;\n`;\n\nconst FunctionBtnContainer = styled.div`\n  display: flex;\n  margin-top: 5px;\n  justify-content: flex-end;\n`;\n\nconst TweetImage = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 15px;\n  justify-self: flex-end;\n  position: absolute;\n  right: -5px;\n  top: 50px;\n`;\n\nconst LOADINGIMAGE =\n  \"https://media1.tenor.com/images/2d135229987db0745acfc8a277263784/tenor.gif?itemid=12556485\";\n\nconst Tweets = ({ tweetObj, isTweeter, imagePath }) => {\n  const [updateBtnClicked, setUpdateBtnClicked] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n  const [imageLink, setImageLink] = useState(LOADINGIMAGE);\n\n  let IMAGE_REF = storageService.ref().child(imagePath);\n\n  const getImage = async () => {\n    if (imagePath) {\n      let link = await IMAGE_REF?.getDownloadURL();\n      setImageLink(link);\n    } else {\n      setImageLink(null);\n    }\n  };\n\n  const onDeleteBtnClick = async () => {\n    if (window.confirm(\"would you like to really delete?\")) {\n      await dataService.collection(\"tweets\").doc(tweetObj.id).delete();\n      if (imagePath) {\n        await IMAGE_REF.delete();\n      }\n    }\n  };\n  const onUpdateBtnClick = () => {\n    setUpdateBtnClicked(true);\n  };\n  const onEditInitBtnClick = async () => {\n    await dataService\n      .collection(\"tweets\")\n      .doc(tweetObj.id)\n      .set({ text: newTweet }, { merge: true });\n\n    setUpdateBtnClicked(false);\n  };\n\n  const onCancelBtnClick = () => {\n    setUpdateBtnClicked(false);\n  };\n\n  const onChange = (e) => {\n    setNewTweet(e.target.value);\n  };\n\n  useEffect(() => {\n    getImage();\n  }, []);\n\n  return updateBtnClicked ? (\n    <TweetContainer>\n      <input type=\"text\" value={newTweet} onChange={onChange}></input>\n      <input\n        type=\"submit\"\n        value=\"Edit\"\n        name=\"editInit\"\n        onClick={onEditInitBtnClick}\n      ></input>\n      <button name=\"cancelBtn\" onClick={onCancelBtnClick}>\n        Cancel\n      </button>\n    </TweetContainer>\n  ) : (\n    <TweetsContainer key={tweetObj.id}>\n      <TweetContainer>\n        <FunctionBtnContainer>\n          {isTweeter ? (\n            <>\n              <button name=\"deleteInit\" onClick={onDeleteBtnClick}>\n                Delete\n              </button>\n              <button name=\"updateBtn\" onClick={onUpdateBtnClick}>\n                Update\n              </button>\n            </>\n          ) : null}\n        </FunctionBtnContainer>\n        <TweetText>{tweetObj.text}</TweetText>\n        {imagePath ? <TweetImage src={imageLink} /> : <></>}\n      </TweetContainer>\n    </TweetsContainer>\n  );\n};\nexport default Tweets;\n","import { storageService, dataService } from \"fBase\";\nimport react from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\nimport { RiAddFill } from \"react-icons/ri\";\n\nconst TweetFormContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nconst TweetTextinput = styled.input`\n  border: none;\n  padding: 10px 20px;\n  border-radius: 15px 0 0 15px;\n  width: 100%;\n  overflow: hidden;\n`;\n\nconst TweetTextContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Tweetform = styled.form``;\n\nconst TweetSubmitBtn = styled.button`\n  border-radius: 0 15px 15px 0;\n  background-color: white;\n  padding: 0;\n  border: none;\n  padding-right: 10px;\n  display: flex;\n  align-items: center;\n`;\n\nconst TweetImage = styled.img`\n  border-radius: 15px;\n  position: absolute;\n  left: 42px;\n  top: 30px;\n`;\nconst TweetFileLabel = styled.label`\n  cursor: pointer;\n  justify-content: center;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n`;\n\nconst TweetFileinput = styled.input`\n  display: none;\n`;\n\nconst ClearBtnContainer = styled.div`\n  float: right;\n`;\n\nconst ClearBtn = styled.button`\n  background: none;\n  border: 1px solid #1da1f2;\n  border-radius: 5px;\n  color: #1da1f2;\n`;\n\nconst TweetForm = ({ imageFile, userData, setImageFile }) => {\n  const [tweet, setTweet] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    const imageInput = document.getElementById(\"imageInput\");\n\n    event.preventDefault();\n    if (imageFile) {\n      await storageService\n        .ref()\n        .child(`images/${userData.uid}/${imageFile?.lastModified}`)\n        .put(imageFile);\n    }\n    if (tweet !== \"\") {\n      await dataService.collection(\"tweets\").add({\n        text: tweet,\n        createdAt: Date.now(),\n        userId: userData.uid,\n        imagePath: imageFile\n          ? `images/${userData.uid}/${imageFile?.lastModified}`\n          : \"\",\n      });\n    }\n    setTweet(\"\");\n    imageInput.value = \"\";\n    setImageFile(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setTweet(value);\n  };\n  const onFileSubmit = (event) => {\n    let {\n      target: { files },\n    } = event;\n    setImageFile(files[0]);\n  };\n\n  const onClearBtnClick = () => {\n    setImageFile(null);\n  };\n\n  return (\n    <TweetFormContainer>\n      <Tweetform onSubmit={onSubmit}>\n        <TweetTextContainer>\n          {imageFile ? (\n            <TweetImage\n              src={URL.createObjectURL(imageFile)}\n              style={{ width: 50, height: 50 }}\n            ></TweetImage>\n          ) : null}\n          <TweetTextinput\n            onChange={onChange}\n            value={tweet}\n            type=\"text\"\n            placeholder=\"Whats on your mind\"\n            id=\"tweetInput\"\n          ></TweetTextinput>\n          <TweetSubmitBtn type=\"submit\" value=\"submit\">\n            <AiOutlineArrowLeft style={{ width: \"25px\", height: \"25px\" }} />\n          </TweetSubmitBtn>\n        </TweetTextContainer>\n        <div style={{ justifyContent: \"center\", display: \"flex\" }}>\n          <TweetFileLabel htmlFor=\"imageInput\" style={{ color: \"white\" }}>\n            <span style={{ color: \"#1da1f2\", textAlign: \"center\" }}>\n              Add Photos\n            </span>\n            <RiAddFill\n              style={{\n                width: \"20px\",\n                height: \"19px\",\n                color: \"#1DA1F2\",\n              }}\n            />\n          </TweetFileLabel>\n          <TweetFileinput\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={onFileSubmit}\n            id=\"imageInput\"\n          />\n        </div>\n        <ClearBtnContainer style={{ float: \"right\" }}>\n          <ClearBtn onClick={onClearBtnClick}>Clear</ClearBtn>\n        </ClearBtnContainer>\n      </Tweetform>\n    </TweetFormContainer>\n  );\n};\n\nexport default TweetForm;\n","import { dataService } from \"fBase\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Tweets from \"./Tweets\";\nimport styled from \"styled-components\";\nimport TweetForm from \"./TweetForm\";\n\nconst TweetBox = ({ userData }) => {\n  const [tweets, setTweets] = useState([]);\n  const [imageFile, setImageFile] = useState(\"\");\n\n  const getData = async () => {\n    dataService\n      .collection(\"tweets\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snap) => {\n        let dataList = snap.docs.map((each) => ({\n          ...each.data(),\n          id: each.id,\n        }));\n        setTweets(dataList);\n      });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <>\n      <TweetForm\n        imageFile={imageFile}\n        userData={userData}\n        setImageFile={setImageFile}\n        imageFile={imageFile}\n      />\n\n      {tweets.map((each) => (\n        <Tweets\n          tweetObj={each}\n          key={each.id}\n          isTweeter={userData.uid === each.userId}\n          imagePath={each.imagePath}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default TweetBox;\n","import TweetBox from \"components/TweetBox\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst HomeContainer = styled.div`\n  padding: 40px 40px;\n`;\n\nconst Home = ({ userData }) => {\n  return (\n    <HomeContainer>\n      <TweetBox userData={userData} />\n    </HomeContainer>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { useState } from \"react\";\n\nconst UpdateProfileFrom = ({\n  userData,\n  setUserData,\n  setUpdateProfileState,\n}) => {\n  const [newUserName, setNewUserName] = useState(userData.displayName);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userData.displayName !== newUserName) {\n      await userData.updateProfile({\n        displayName: newUserName,\n        // uid: userData.uid,\n        // updateProfile: (value) => userData.updateProfile(value),\n      });\n    }\n    try {\n      setUpdateProfileState(false);\n      setNewUserName(newUserName);\n      setUserData({\n        displayName: newUserName,\n        uid: userData.uid,\n        updateProfile: (value) => userData.updateProfile(value),\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onBackBtnClick = () => {\n    setUpdateProfileState((prev) => !prev);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewUserName(value);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        onChange={onChange}\n        value={newUserName || \"Undefined\"}\n      ></input>\n      <input type=\"submit\" value=\"Update Profile\"></input>\n      <button onClick={onBackBtnClick}>Back</button>\n    </form>\n  );\n};\n\nexport default UpdateProfileFrom;\n","import Tweets from \"components/Tweets\";\nimport UpdateProfileFrom from \"components/UpdateProfileForm\";\nimport { authService, dataService } from \"fBase\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst ProfileContainer = styled.div`\n  padding: 40px 40px;\n`;\n\nconst ProfileFunctions = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nconst LogoutBtn = styled.button`\n  background-color: #1da1f2;\n  color: white;\n  padding: 2em 3em;\n  border: none;\n  border-radius: 15px;\n  letter-spacing: 2px;\n  text-transform: uppercase;\n  outline: none;\n  align-self: center;\n  cursor: pointer;\n  width: 80%;\n  margin-bottom: 15px;\n`;\nconst ProfileEditBtn = styled.button`\n  width: 80%;\n  background-color: #1da1f2;\n  color: black;\n  padding: 2em 3em;\n  border-radius: 15px;\n  border: none;\n  letter-spacing: 2px;\n  text-transform: uppercase;\n  outline: none;\n  align-self: center;\n  cursor: pointer;\n`;\n\nconst Profile = ({ userData, setUserData }) => {\n  const [updateProfileState, setUpdateProfileState] = useState(false);\n  const [userTweets, setUserTweets] = useState([]);\n  let history = useHistory();\n\n  const onLogOutClick = async () => {\n    await authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onUpdateProfileBtnClick = () => {\n    setUpdateProfileState((prev) => !prev);\n  };\n\n  const getUserTweets = async () => {\n    dataService\n      .collection(\"tweets\")\n      .where(\"userId\", \"==\", userData.uid)\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snap) => {\n        let dataList = snap.docs.map((each) => ({\n          ...each.data(),\n          id: each.id,\n        }));\n        setUserTweets(dataList);\n      });\n  };\n\n  useEffect(() => {\n    getUserTweets();\n  }, []);\n\n  return (\n    <ProfileContainer>\n      {updateProfileState ? (\n        <UpdateProfileFrom\n          userData={userData}\n          setUserData={setUserData}\n          setUpdateProfileState={setUpdateProfileState}\n        />\n      ) : (\n        <>\n          <ProfileFunctions>\n            <LogoutBtn onClick={onUpdateProfileBtnClick}>\n              Update Profile\n            </LogoutBtn>\n            <ProfileEditBtn onClick={onLogOutClick}>Log Out</ProfileEditBtn>\n          </ProfileFunctions>\n          <h1 style={{ color: \"#1da1f2\" }}>MY TWEETS</h1>\n          {userTweets.map((each) => (\n            <Tweets\n              key={each.createdAt}\n              tweetObj={each}\n              isTweeter={true}\n              imagePath={each.imagePath}\n            />\n          ))}\n        </>\n      )}\n    </ProfileContainer>\n  );\n};\n\nexport default Profile;\n","import Navigation from \"components/Navigation\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport { useEffect, useLayoutEffect, useState } from \"react\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\n\nconst AppRoute = ({ loggedIn, userData, setUserData }) => {\n  return loggedIn ? (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home userData={userData} />\n          </Route>\n          <Route path=\"/profile\" exact>\n            <Profile userData={userData} setUserData={setUserData} />\n          </Route>\n        </Switch>\n        <Navigation userData={userData} />\n      </Router>\n    </>\n  ) : (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Auth />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRoute;\n","import { useEffect, useState } from \"react\";\nimport { authService } from \"fBase\";\nimport AppRoute from \"Router\";\nimport styled from \"styled-components\";\n\nconst Footer = styled.footer`\n  color: white;\n  width: 100vw;\n  text-align: center;\n  font-weight: 300;\n  position: absolute;\n  bottom: 50px;\n`;\nconst MainContainer = styled.div`\n  min-height: 100vh;\n  position: relative;\n`;\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [init, setInit] = useState(false);\n  const [userData, setUserData] = useState();\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setLoggedIn(true);\n        setUserData(user);\n      } else {\n        setLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  return (\n    <MainContainer>\n      {init ? (\n        <AppRoute\n          loggedIn={loggedIn}\n          userData={userData}\n          setUserData={setUserData}\n        />\n      ) : (\n        <h1>LOADING...</h1>\n      )}\n      <Footer>\n        <span>&copy;{new Date().getFullYear()} TwitterClone By Minseok</span>\n      </Footer>\n    </MainContainer>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}